//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HotelManagement.HotelService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderListDTO", Namespace="http://schemas.datacontract.org/2004/07/HotelWCFService.DTO")]
    [System.SerializableAttribute()]
    public partial class OrderListDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tables", Namespace="http://schemas.datacontract.org/2004/07/HotelWCFService.DTO")]
    [System.SerializableAttribute()]
    public partial class Tables : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TableIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TableId {
            get {
                return this.TableIdField;
            }
            set {
                if ((this.TableIdField.Equals(value) != true)) {
                    this.TableIdField = value;
                    this.RaisePropertyChanged("TableId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Items", Namespace="http://schemas.datacontract.org/2004/07/HotelWCFService.Models")]
    [System.SerializableAttribute()]
    public partial class Items : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FoodCategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ItemActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalQuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FoodCategoryId {
            get {
                return this.FoodCategoryIdField;
            }
            set {
                if ((this.FoodCategoryIdField.Equals(value) != true)) {
                    this.FoodCategoryIdField = value;
                    this.RaisePropertyChanged("FoodCategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ItemActive {
            get {
                return this.ItemActiveField;
            }
            set {
                if ((this.ItemActiveField.Equals(value) != true)) {
                    this.ItemActiveField = value;
                    this.RaisePropertyChanged("ItemActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalQuantity {
            get {
                return this.TotalQuantityField;
            }
            set {
                if ((this.TotalQuantityField.Equals(value) != true)) {
                    this.TotalQuantityField = value;
                    this.RaisePropertyChanged("TotalQuantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order_Items_Link", Namespace="http://schemas.datacontract.org/2004/07/HotelWCFService.Models")]
    [System.SerializableAttribute()]
    public partial class Order_Items_Link : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OderId {
            get {
                return this.OderIdField;
            }
            set {
                if ((this.OderIdField.Equals(value) != true)) {
                    this.OderIdField = value;
                    this.RaisePropertyChanged("OderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupByOrderList", Namespace="http://schemas.datacontract.org/2004/07/HotelWCFService.DTO")]
    [System.SerializableAttribute()]
    public partial class GroupByOrderList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HotelManagement.HotelService.OrderList[] ItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HotelManagement.HotelService.OrderList[] Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderList", Namespace="http://schemas.datacontract.org/2004/07/HotelWCFService.DTO")]
    [System.SerializableAttribute()]
    public partial class OrderList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginDTO", Namespace="http://schemas.datacontract.org/2004/07/HotelWCFService.DTO")]
    [System.SerializableAttribute()]
    public partial class LoginDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseDTO", Namespace="http://schemas.datacontract.org/2004/07/HotelWCFService.DTO")]
    [System.SerializableAttribute()]
    public partial class ResponseDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool accessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string roleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int userIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool access {
            get {
                return this.accessField;
            }
            set {
                if ((this.accessField.Equals(value) != true)) {
                    this.accessField = value;
                    this.RaisePropertyChanged("access");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string role {
            get {
                return this.roleField;
            }
            set {
                if ((object.ReferenceEquals(this.roleField, value) != true)) {
                    this.roleField = value;
                    this.RaisePropertyChanged("role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userId {
            get {
                return this.userIdField;
            }
            set {
                if ((this.userIdField.Equals(value) != true)) {
                    this.userIdField = value;
                    this.RaisePropertyChanged("userId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Users", Namespace="http://schemas.datacontract.org/2004/07/HotelWCFService.Models")]
    [System.SerializableAttribute()]
    public partial class Users : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Roleid {
            get {
                return this.RoleidField;
            }
            set {
                if ((this.RoleidField.Equals(value) != true)) {
                    this.RoleidField = value;
                    this.RaisePropertyChanged("Roleid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HotelService.IHotelService")]
    public interface IHotelService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHotelService/GetTables", ReplyAction="http://tempuri.org/IHotelService/GetTablesResponse")]
        System.Data.DataTable GetTables();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHotelService/GetTables", ReplyAction="http://tempuri.org/IHotelService/GetTablesResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetTablesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHotelService/UpdateKitchenItemsQuantity", ReplyAction="http://tempuri.org/IHotelService/UpdateKitchenItemsQuantityResponse")]
        bool UpdateKitchenItemsQuantity(int ItemId, int Quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHotelService/UpdateKitchenItemsQuantity", ReplyAction="http://tempuri.org/IHotelService/UpdateKitchenItemsQuantityResponse")]
        System.Threading.Tasks.Task<bool> UpdateKitchenItemsQuantityAsync(int ItemId, int Quantity);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHotelServiceChannel : HotelManagement.HotelService.IHotelService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HotelServiceClient : System.ServiceModel.ClientBase<HotelManagement.HotelService.IHotelService>, HotelManagement.HotelService.IHotelService {
        
        public HotelServiceClient() {
        }
        
        public HotelServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HotelServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HotelServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HotelServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable GetTables() {
            return base.Channel.GetTables();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetTablesAsync() {
            return base.Channel.GetTablesAsync();
        }
        
        public bool UpdateKitchenItemsQuantity(int ItemId, int Quantity) {
            return base.Channel.UpdateKitchenItemsQuantity(ItemId, Quantity);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateKitchenItemsQuantityAsync(int ItemId, int Quantity) {
            return base.Channel.UpdateKitchenItemsQuantityAsync(ItemId, Quantity);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HotelService.IItemsService")]
    public interface IItemsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetOrderItemsForTable", ReplyAction="http://tempuri.org/IItemsService/GetOrderItemsForTableResponse")]
        System.Data.DataTable GetOrderItemsForTable(int TableNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetOrderItemsForTable", ReplyAction="http://tempuri.org/IItemsService/GetOrderItemsForTableResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetOrderItemsForTableAsync(int TableNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetOrderItemsForTableList", ReplyAction="http://tempuri.org/IItemsService/GetOrderItemsForTableListResponse")]
        HotelManagement.HotelService.OrderListDTO[] GetOrderItemsForTableList(int TableNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetOrderItemsForTableList", ReplyAction="http://tempuri.org/IItemsService/GetOrderItemsForTableListResponse")]
        System.Threading.Tasks.Task<HotelManagement.HotelService.OrderListDTO[]> GetOrderItemsForTableListAsync(int TableNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetMenu", ReplyAction="http://tempuri.org/IItemsService/GetMenuResponse")]
        System.Data.DataTable GetMenu();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetMenu", ReplyAction="http://tempuri.org/IItemsService/GetMenuResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetMenuAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetItems", ReplyAction="http://tempuri.org/IItemsService/GetItemsResponse")]
        System.Data.DataTable GetItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetItems", ReplyAction="http://tempuri.org/IItemsService/GetItemsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetItemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetTableList", ReplyAction="http://tempuri.org/IItemsService/GetTableListResponse")]
        HotelManagement.HotelService.Tables[] GetTableList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetTableList", ReplyAction="http://tempuri.org/IItemsService/GetTableListResponse")]
        System.Threading.Tasks.Task<HotelManagement.HotelService.Tables[]> GetTableListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetCategory", ReplyAction="http://tempuri.org/IItemsService/GetCategoryResponse")]
        System.Data.DataTable GetCategory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetCategory", ReplyAction="http://tempuri.org/IItemsService/GetCategoryResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetCategoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetItemsList", ReplyAction="http://tempuri.org/IItemsService/GetItemsListResponse")]
        HotelManagement.HotelService.Items[] GetItemsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetItemsList", ReplyAction="http://tempuri.org/IItemsService/GetItemsListResponse")]
        System.Threading.Tasks.Task<HotelManagement.HotelService.Items[]> GetItemsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetMenuByCategoryId", ReplyAction="http://tempuri.org/IItemsService/GetMenuByCategoryIdResponse")]
        HotelManagement.HotelService.Items[] GetMenuByCategoryId(int CategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/GetMenuByCategoryId", ReplyAction="http://tempuri.org/IItemsService/GetMenuByCategoryIdResponse")]
        System.Threading.Tasks.Task<HotelManagement.HotelService.Items[]> GetMenuByCategoryIdAsync(int CategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/NewOrderForTable", ReplyAction="http://tempuri.org/IItemsService/NewOrderForTableResponse")]
        int NewOrderForTable(int TableNo, int WaiterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/NewOrderForTable", ReplyAction="http://tempuri.org/IItemsService/NewOrderForTableResponse")]
        System.Threading.Tasks.Task<int> NewOrderForTableAsync(int TableNo, int WaiterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/ExistingOrderForTable", ReplyAction="http://tempuri.org/IItemsService/ExistingOrderForTableResponse")]
        int ExistingOrderForTable(int TableNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/ExistingOrderForTable", ReplyAction="http://tempuri.org/IItemsService/ExistingOrderForTableResponse")]
        System.Threading.Tasks.Task<int> ExistingOrderForTableAsync(int TableNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/AddItems", ReplyAction="http://tempuri.org/IItemsService/AddItemsResponse")]
        bool AddItems(HotelManagement.HotelService.Order_Items_Link order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/AddItems", ReplyAction="http://tempuri.org/IItemsService/AddItemsResponse")]
        System.Threading.Tasks.Task<bool> AddItemsAsync(HotelManagement.HotelService.Order_Items_Link order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/DeleteItemsFromCustomerOrder", ReplyAction="http://tempuri.org/IItemsService/DeleteItemsFromCustomerOrderResponse")]
        bool DeleteItemsFromCustomerOrder(HotelManagement.HotelService.Order_Items_Link order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/DeleteItemsFromCustomerOrder", ReplyAction="http://tempuri.org/IItemsService/DeleteItemsFromCustomerOrderResponse")]
        System.Threading.Tasks.Task<bool> DeleteItemsFromCustomerOrderAsync(HotelManagement.HotelService.Order_Items_Link order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/OrderByWaiter", ReplyAction="http://tempuri.org/IItemsService/OrderByWaiterResponse")]
        HotelManagement.HotelService.GroupByOrderList[] OrderByWaiter(int WaiterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemsService/OrderByWaiter", ReplyAction="http://tempuri.org/IItemsService/OrderByWaiterResponse")]
        System.Threading.Tasks.Task<HotelManagement.HotelService.GroupByOrderList[]> OrderByWaiterAsync(int WaiterId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IItemsServiceChannel : HotelManagement.HotelService.IItemsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ItemsServiceClient : System.ServiceModel.ClientBase<HotelManagement.HotelService.IItemsService>, HotelManagement.HotelService.IItemsService {
        
        public ItemsServiceClient() {
        }
        
        public ItemsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ItemsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ItemsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ItemsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable GetOrderItemsForTable(int TableNo) {
            return base.Channel.GetOrderItemsForTable(TableNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetOrderItemsForTableAsync(int TableNo) {
            return base.Channel.GetOrderItemsForTableAsync(TableNo);
        }
        
        public HotelManagement.HotelService.OrderListDTO[] GetOrderItemsForTableList(int TableNo) {
            return base.Channel.GetOrderItemsForTableList(TableNo);
        }
        
        public System.Threading.Tasks.Task<HotelManagement.HotelService.OrderListDTO[]> GetOrderItemsForTableListAsync(int TableNo) {
            return base.Channel.GetOrderItemsForTableListAsync(TableNo);
        }
        
        public System.Data.DataTable GetMenu() {
            return base.Channel.GetMenu();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetMenuAsync() {
            return base.Channel.GetMenuAsync();
        }
        
        public System.Data.DataTable GetItems() {
            return base.Channel.GetItems();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetItemsAsync() {
            return base.Channel.GetItemsAsync();
        }
        
        public HotelManagement.HotelService.Tables[] GetTableList() {
            return base.Channel.GetTableList();
        }
        
        public System.Threading.Tasks.Task<HotelManagement.HotelService.Tables[]> GetTableListAsync() {
            return base.Channel.GetTableListAsync();
        }
        
        public System.Data.DataTable GetCategory() {
            return base.Channel.GetCategory();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetCategoryAsync() {
            return base.Channel.GetCategoryAsync();
        }
        
        public HotelManagement.HotelService.Items[] GetItemsList() {
            return base.Channel.GetItemsList();
        }
        
        public System.Threading.Tasks.Task<HotelManagement.HotelService.Items[]> GetItemsListAsync() {
            return base.Channel.GetItemsListAsync();
        }
        
        public HotelManagement.HotelService.Items[] GetMenuByCategoryId(int CategoryId) {
            return base.Channel.GetMenuByCategoryId(CategoryId);
        }
        
        public System.Threading.Tasks.Task<HotelManagement.HotelService.Items[]> GetMenuByCategoryIdAsync(int CategoryId) {
            return base.Channel.GetMenuByCategoryIdAsync(CategoryId);
        }
        
        public int NewOrderForTable(int TableNo, int WaiterId) {
            return base.Channel.NewOrderForTable(TableNo, WaiterId);
        }
        
        public System.Threading.Tasks.Task<int> NewOrderForTableAsync(int TableNo, int WaiterId) {
            return base.Channel.NewOrderForTableAsync(TableNo, WaiterId);
        }
        
        public int ExistingOrderForTable(int TableNo) {
            return base.Channel.ExistingOrderForTable(TableNo);
        }
        
        public System.Threading.Tasks.Task<int> ExistingOrderForTableAsync(int TableNo) {
            return base.Channel.ExistingOrderForTableAsync(TableNo);
        }
        
        public bool AddItems(HotelManagement.HotelService.Order_Items_Link order) {
            return base.Channel.AddItems(order);
        }
        
        public System.Threading.Tasks.Task<bool> AddItemsAsync(HotelManagement.HotelService.Order_Items_Link order) {
            return base.Channel.AddItemsAsync(order);
        }
        
        public bool DeleteItemsFromCustomerOrder(HotelManagement.HotelService.Order_Items_Link order) {
            return base.Channel.DeleteItemsFromCustomerOrder(order);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteItemsFromCustomerOrderAsync(HotelManagement.HotelService.Order_Items_Link order) {
            return base.Channel.DeleteItemsFromCustomerOrderAsync(order);
        }
        
        public HotelManagement.HotelService.GroupByOrderList[] OrderByWaiter(int WaiterId) {
            return base.Channel.OrderByWaiter(WaiterId);
        }
        
        public System.Threading.Tasks.Task<HotelManagement.HotelService.GroupByOrderList[]> OrderByWaiterAsync(int WaiterId) {
            return base.Channel.OrderByWaiterAsync(WaiterId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HotelService.IAdminService")]
    public interface IAdminService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/AddItemsToMenu", ReplyAction="http://tempuri.org/IAdminService/AddItemsToMenuResponse")]
        bool AddItemsToMenu(HotelManagement.HotelService.Items Item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/AddItemsToMenu", ReplyAction="http://tempuri.org/IAdminService/AddItemsToMenuResponse")]
        System.Threading.Tasks.Task<bool> AddItemsToMenuAsync(HotelManagement.HotelService.Items Item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/DeleteItemsFromMenu", ReplyAction="http://tempuri.org/IAdminService/DeleteItemsFromMenuResponse")]
        bool DeleteItemsFromMenu(int ItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/DeleteItemsFromMenu", ReplyAction="http://tempuri.org/IAdminService/DeleteItemsFromMenuResponse")]
        System.Threading.Tasks.Task<bool> DeleteItemsFromMenuAsync(int ItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/UpdateItemTotalQuantity", ReplyAction="http://tempuri.org/IAdminService/UpdateItemTotalQuantityResponse")]
        bool UpdateItemTotalQuantity(int ItemId, int Quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/UpdateItemTotalQuantity", ReplyAction="http://tempuri.org/IAdminService/UpdateItemTotalQuantityResponse")]
        System.Threading.Tasks.Task<bool> UpdateItemTotalQuantityAsync(int ItemId, int Quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/AddTables", ReplyAction="http://tempuri.org/IAdminService/AddTablesResponse")]
        bool AddTables();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/AddTables", ReplyAction="http://tempuri.org/IAdminService/AddTablesResponse")]
        System.Threading.Tasks.Task<bool> AddTablesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminServiceChannel : HotelManagement.HotelService.IAdminService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminServiceClient : System.ServiceModel.ClientBase<HotelManagement.HotelService.IAdminService>, HotelManagement.HotelService.IAdminService {
        
        public AdminServiceClient() {
        }
        
        public AdminServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdminServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddItemsToMenu(HotelManagement.HotelService.Items Item) {
            return base.Channel.AddItemsToMenu(Item);
        }
        
        public System.Threading.Tasks.Task<bool> AddItemsToMenuAsync(HotelManagement.HotelService.Items Item) {
            return base.Channel.AddItemsToMenuAsync(Item);
        }
        
        public bool DeleteItemsFromMenu(int ItemId) {
            return base.Channel.DeleteItemsFromMenu(ItemId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteItemsFromMenuAsync(int ItemId) {
            return base.Channel.DeleteItemsFromMenuAsync(ItemId);
        }
        
        public bool UpdateItemTotalQuantity(int ItemId, int Quantity) {
            return base.Channel.UpdateItemTotalQuantity(ItemId, Quantity);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateItemTotalQuantityAsync(int ItemId, int Quantity) {
            return base.Channel.UpdateItemTotalQuantityAsync(ItemId, Quantity);
        }
        
        public bool AddTables() {
            return base.Channel.AddTables();
        }
        
        public System.Threading.Tasks.Task<bool> AddTablesAsync() {
            return base.Channel.AddTablesAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HotelService.IAccountService")]
    public interface IAccountService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/Login", ReplyAction="http://tempuri.org/IAccountService/LoginResponse")]
        HotelManagement.HotelService.ResponseDTO Login(HotelManagement.HotelService.LoginDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/Login", ReplyAction="http://tempuri.org/IAccountService/LoginResponse")]
        System.Threading.Tasks.Task<HotelManagement.HotelService.ResponseDTO> LoginAsync(HotelManagement.HotelService.LoginDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AddAccount", ReplyAction="http://tempuri.org/IAccountService/AddAccountResponse")]
        bool AddAccount(HotelManagement.HotelService.Users user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AddAccount", ReplyAction="http://tempuri.org/IAccountService/AddAccountResponse")]
        System.Threading.Tasks.Task<bool> AddAccountAsync(HotelManagement.HotelService.Users user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetRoles", ReplyAction="http://tempuri.org/IAccountService/GetRolesResponse")]
        System.Data.DataTable GetRoles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetRoles", ReplyAction="http://tempuri.org/IAccountService/GetRolesResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetRolesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/DeleteAccount", ReplyAction="http://tempuri.org/IAccountService/DeleteAccountResponse")]
        bool DeleteAccount(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/DeleteAccount", ReplyAction="http://tempuri.org/IAccountService/DeleteAccountResponse")]
        System.Threading.Tasks.Task<bool> DeleteAccountAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountServiceChannel : HotelManagement.HotelService.IAccountService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountServiceClient : System.ServiceModel.ClientBase<HotelManagement.HotelService.IAccountService>, HotelManagement.HotelService.IAccountService {
        
        public AccountServiceClient() {
        }
        
        public AccountServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HotelManagement.HotelService.ResponseDTO Login(HotelManagement.HotelService.LoginDTO user) {
            return base.Channel.Login(user);
        }
        
        public System.Threading.Tasks.Task<HotelManagement.HotelService.ResponseDTO> LoginAsync(HotelManagement.HotelService.LoginDTO user) {
            return base.Channel.LoginAsync(user);
        }
        
        public bool AddAccount(HotelManagement.HotelService.Users user) {
            return base.Channel.AddAccount(user);
        }
        
        public System.Threading.Tasks.Task<bool> AddAccountAsync(HotelManagement.HotelService.Users user) {
            return base.Channel.AddAccountAsync(user);
        }
        
        public System.Data.DataTable GetRoles() {
            return base.Channel.GetRoles();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetRolesAsync() {
            return base.Channel.GetRolesAsync();
        }
        
        public bool DeleteAccount(string username) {
            return base.Channel.DeleteAccount(username);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAccountAsync(string username) {
            return base.Channel.DeleteAccountAsync(username);
        }
    }
}
